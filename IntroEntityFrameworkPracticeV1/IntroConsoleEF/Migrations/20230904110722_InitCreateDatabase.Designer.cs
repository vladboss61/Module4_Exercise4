// <auto-generated />
using System;
using IntroConsoleEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntroConsoleEF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230904110722_InitCreateDatabase")]
    partial class InitCreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IntroConsoleEF.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FoundationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("IntroConsoleEF.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Guitare"
                        },
                        new
                        {
                            Id = 2,
                            Name = "IPhone"
                        });
                });

            modelBuilder.Entity("IntroConsoleEF.SupplyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("SupplyHistory");
                });

            modelBuilder.Entity("IntroConsoleEF.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("IntroConsoleEF.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("IntroConsoleEF.Company", b =>
                {
                    b.HasOne("IntroConsoleEF.Product", null)
                        .WithMany("Companies")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("IntroConsoleEF.SupplyHistory", b =>
                {
                    b.HasOne("IntroConsoleEF.Company", "Company")
                        .WithMany("SupplyHistory")
                        .HasForeignKey("CompanyId");

                    b.HasOne("IntroConsoleEF.Product", "Product")
                        .WithMany("SupplyHistory")
                        .HasForeignKey("ProductId");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IntroConsoleEF.User", b =>
                {
                    b.HasOne("IntroConsoleEF.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("IntroConsoleEF.UserProfile", b =>
                {
                    b.HasOne("IntroConsoleEF.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("IntroConsoleEF.UserProfile", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IntroConsoleEF.Company", b =>
                {
                    b.Navigation("SupplyHistory");
                });

            modelBuilder.Entity("IntroConsoleEF.Product", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("SupplyHistory");
                });

            modelBuilder.Entity("IntroConsoleEF.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
